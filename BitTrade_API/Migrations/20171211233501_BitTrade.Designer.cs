// <auto-generated />
using BitTrade_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BitTrade_API.Migrations
{
    [DbContext(typeof(BitTradeContext))]
    [Migration("20171211233501_BitTrade")]
    partial class BitTrade
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BitTrade_API.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apikey");

                    b.Property<string>("Email");

                    b.Property<string>("Firstname");

                    b.Property<string>("Password");

                    b.Property<int>("StatutId");

                    b.Property<string>("Surname");

                    b.Property<string>("Token");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BitTrade_API.Models.UserCurrencies", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MarketName");

                    b.Property<long>("UserForeignKey");

                    b.HasKey("Id");

                    b.HasIndex("UserForeignKey");

                    b.ToTable("UserCurrencies");
                });

            modelBuilder.Entity("BitTrade_API.Models.UserCurrencies", b =>
                {
                    b.HasOne("BitTrade_API.Models.User", "User")
                        .WithMany("UserCurrencies")
                        .HasForeignKey("UserForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
